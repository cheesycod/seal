local env = {}
--[=[
A stdlib to interact with the script's running environment.
```luau
type env = {
	--- a list of arguments passed to the program
	args: {string},
	--- your operating system
	os: "Windows" | "Linux" | "Android" | "MacOS" | "Other",
	--- the path of the executable
	executable_path: string,
	script_path: string,
	current_working_directory: string,
	--- get environment variable if exists
	getvar: (key: string) -> string?,
	--- set an environment variable (unsafe in multithreaded linux)
	setvar: (key: string, value: string) -> nil,
	--- remove an environment variable (unsafe in multithreaded linux)
	removevar: (key: string) -> nil,
}
```
]=]
type env = {
	--- a list of arguments passed to the program
	args: {string},
	--- your operating system
	os: "Windows" | "Linux" | "Android" | "MacOS" | "Other",
	--- the path of the executable
	executable_path: string,
	script_path: string,
	current_working_directory: string,
	--[=[
	Gets an environment variable in the current process.
	]=]
	getvar: (key: string) -> string?,
	--[=[
	Sets an environment variable in the current process.

	Note, this function is **unsafe** in multithreaded contexts on Linux.
	]=]
	setvar: (key: string, value: string) -> string,
	--[=[
	Removes an environment variable in the current process.

	Note, this function is **unsafe** in multithreaded contexts on Linux.
	]=]
	removevar: (key: string) -> nil,
}

return env :: env